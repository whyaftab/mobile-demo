// Generated by https://quicktype.io

export type RequestFields = { [key: string]: string | number };
export interface ServerResponse<T> {
  data: T;
  success: boolean;
  message: string;
  token?: string;
}

export interface PaginationResponse<T> {
  data: T[];
  success: boolean;
  message: null;
  errors: null;
}

export interface MainData {
  apiTimestamp: Date;
  userId: null;
  organisationId: number;
  siteId: number;
  dynamic_content: DynamicContent;
  categories: MainDataCategory[];
  tags: Tag[];
  tiles: Tile[];
  articles: Article[];
}

export interface Article {
  id: number;
  type: ArticleType;
  title: string;
  content: null | string;
  video_embed?: null;
  podcast_embed?: null;
  image_url: string;
  relatedArticles?: RelatedArticle[];
  categories: SubcategoryElement[];
  subcategories: SubcategoryElement[];
  tags: SubcategoryElement[];
  relatedRecipes?: RelatedArticle[];
}

export interface SubcategoryElement {
  id: number;
  name: string;
}

export interface RelatedArticle {
  id: number;
}

export enum ArticleType {
  Article = "article",
  Recipe = "recipe",
}

export enum CategoryType {
  Local = "Local",
  Server = "Server",
}

export interface MainDataCategory {
  id: number;
  order_column: number;
  type?: CategoryType.Server;
  name: string;
  subcategories: Subcategory[];
  image_url: string;
  articles: number[];
  recipes: any[];
}

export interface Subcategory {
  id: number;
  order_column: number;
  name: string;
  articles: number[];
  recipes: any[];
}

export interface DynamicContent {
  home_carousel: HomeCarousel[];
  contact_phone_number: string;
  privacy_policy: string;
  data_protection: null;
  terms_of_use: string;
  faq_content: string;
  hide_chat: number;
}

export interface HomeCarousel {
  text: string;
}

export interface Tag {
  id: number;
  name: string;
  articles: RelatedArticle[];
  recipes: RelatedArticle[];
}

export enum LinkableType {
  Questionnaire = "questionnaire",
  Page = "page",
  Null = null,
  MyContent = "myContent",
}

export interface Tile {
  id: number;
  name: string;
  type?: CategoryType.Local;
  external_url?: null | string;
  linkable_type?: LinkableType;
  linkable_id?: number | null;
  linkable?: Linkable | null;
}

export interface Linkable {
  id: number;
  name: string;
  slug: string;
  question_one?: string;
  answers_one?: string;
  question_two?: string;
  answers_two?: string;
  question_three?: string;
  answers_three?: string;
  question_four?: null;
  answers_four?: null;
  question_five?: null;
  answers_five?: null;
  created_at: Date;
  updated_at: Date;
  deleted_at: null;
  content?: string;
}
